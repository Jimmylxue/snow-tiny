"use strict";var e=require("fs"),t=require("path"),n=require("https"),o=require("url");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a,i=r(e),s=r(n),u=r(o);function c(e){const t=(e?.hostname||["tinyjpg.com","tinypng.com"])[function(e=0,t=10){return Math.floor(Math.random()*(t-e+1)+e)}(0,e?.hostname?e?.hostname.length:1)],n=e?.uploadPath||"/backend/opt/shrink";return console.log("snowTinyConfig",e),console.log("hostname",t),console.log("path",n),{headers:{"Cache-Control":"no-cache","Content-Type":"application/x-www-form-urlencoded","Postman-Token":Date.now(),"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36","X-Forwarded-For":new Array(4).fill(0).map((()=>parseInt(String(255*Math.random()),10))).join(".")},hostname:t,method:"POST",path:n,rejectUnauthorized:!1}}!function(e){e[e.B=0]="B",e[e.KB=1]="KB",e[e.MB=2]="MB",e[e.GB=3]="GB",e[e.TB=4]="TB",e[e.PB=5]="PB",e[e.EB=6]="EB",e[e.ZB=7]="ZB",e[e.YB=8]="YB"}(a||(a={}));const l=Buffer.from("tiny","binary");process.on("message",(({tasks:e,snowTinyConfig:n})=>{(async()=>{const o=e.map((e=>function({fullRoute:e,outputRoute:t,fileName:n},o){return async()=>{const r={input:0,output:0,ratio:0,msg:"",time:0,file:i.default.readFileSync(e),path:t,fileName:n};try{const e=+new Date,t=await function(e,t){const n=c(t);return new Promise(((t,o)=>{const r=s.default.request(n,(e=>{e.on("data",(e=>{try{const n=JSON.parse(e.toString());n.error?o(n):t(n)}catch(e){o(e)}}))}));r.write(e),r.on("error",(e=>o(e))),r.end()}))}(r.file,o),n=await function(e){const t=new u.default.URL(e);return new Promise(((e,n)=>{const o=s.default.request(t,(t=>{let n="";t.setEncoding("binary"),t.on("data",(e=>n+=e)),t.on("end",(()=>e(n)))}));o.on("error",(e=>n(e))),o.end()}))}(t.output.url);r.input=t.input.size,r.output=t.output.size,r.ratio=1-t.output.ratio,r.file=Buffer.alloc(n.length,n,"binary"),r.time=+new Date-e}catch(e){r.msg=`错误：${JSON.stringify(e||{})}`}return r}}(e,n))),r=await Promise.all([...o.map((e=>e()))]);await Promise.all(r.map((({path:e,file:o,fileName:r})=>{new Promise(((a,s)=>{n?.flat?i.default.writeFile(t.resolve(process.cwd(),n.output,r),Buffer.concat([o,l]),(e=>{e&&s(e),a(!0)})):i.default.writeFile(e,Buffer.concat([o,l]),(e=>{e&&s(e),a(!0)}))}))}))),process.send&&process.send(r)})()}));
